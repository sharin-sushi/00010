
>API
☑1. APIサーバーたてて、ブラウザ上でおいもの公開情報を表示
×    なお、表示する情報そのものはgoサーバーとは別に
>DB化
☑2. おいもの情報をデータベースに格納


☑>CRUD化 MySQL
　3.  データを追加できるようにする(create)
    ☑予め項目を用意しておく(ex. 好きな物、嫌いな物、よく歌う曲、好きなゲーム…)
　　☑→歌ってみた曲, 動画タイトル, url, 歌い始めの時間
　2-2. データについて項目を増やせるようにする(create?)　※後回し、何ならやらない
　3. 既存データを編集できるようにする(updata)
　4. 既存データを削除できるようにする(delete)

・nilカラムに対応させる

>動的ハイパーリンクの作成→js無でもgoでできるっぽいけど必要になったらでいいや

---
目標の切り分け
☑大目標: mysqlのレコードをブラウザで表示
↓
☑小目標: mysqlのレコードをPrintfでターミナルへ表示
☑小目標: 取得した情報(Printf()の中身)をブラウザで表示

じゃあ、CRUD実装を切り分けると？
→なので、gormを使おう…一旦保留　使わなくてもできた

・CRUDのおまけでrollback導入
・Next.js、サーバー分離（ブラウザサーバーのgoサーバーSPA化）
・Docker導入
・AWS導入
・HTML&CSSにも多少は力入れるmaterial UI
　どっち使う？普及率、ポートフォリオ提出先の使いやすさは？
　https://mui.com　没個性
　https://chakra-ui.com

/// 